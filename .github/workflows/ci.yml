name: ci
on:
  push:
    branches: [ main, release ]
  pull_request:
    branches: [ main, release ]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # RUSTDOCFLAGS: "-Dwarnings"
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0 # TODO: remove this when we cache the builds
  
jobs:
  build-test-package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
      fail-fast: true    
    steps:
      - uses: actions/checkout@v4

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
  
      - name: setup Rust
        run: |
          rustup update
          cargo install cargo-aur
          cargo install cargo-generate-rpm          

      - name: build
        run: |
          cargo build --all-targets --all-features
          cargo build --release --all-targets --all-features

      - name: fmt check
        run: cargo fmt --all -- --check

      - name: check
        run: cargo check --all

      # - name: tests
      #   run: cargo test --release --all --all-features

      # - name: doc
      #   run: cargo doc --workspace --all-features --no-deps

      - name: package
        run: |
          cargo build --release

      - name: upload binary
        if: ${{ !startsWith(matrix.runner, 'windows') }}
        uses: actions/upload-artifact@v4
        with:
          name: rencfs_desktop_daemon_${{ matrix.runner }}
          path: target/release/rencfs_desktop_daemon
  
      - name: upload binary
        if: startsWith(matrix.runner, 'windows')
        uses: actions/upload-artifact@v4
        with:
          name: recnfs_desktop_daemon_${{ matrix.runner }}
          path: target/release/rencfs_desktop_daemon.exe

      - name: upload binary
        if: ${{ !startsWith(matrix.runner, 'windows') }}
        uses: actions/upload-artifact@v4
        with:
          name: rencfs_desktop_gui_${{ matrix.runner }}
          path: target/release/rencfs_desktop_gui
  
      - name: upload binary
        if: startsWith(matrix.runner, 'windows')
        uses: actions/upload-artifact@v4
        with:
          name: rencfs_desktop_gui_${{ matrix.runner }}
          path: target/release/rencfs_desktop_gui.exe
